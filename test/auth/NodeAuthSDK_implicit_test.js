// Generated by CoffeeScript 1.9.3
(function() {
  var MojioAuthSDK, MojioSDK, nock, should;

  should = require('should');

  MojioSDK = require('../../src/sdk/MojioSDK');

  MojioAuthSDK = require('../../src/sdk/MojioAuthSDK');

  nock = require('nock');

  describe('Node Mojio Auth SDK password type auth', function() {
    var sdk, testErrorResult;
    sdk = new MojioSDK({
      sdk: MojioAuthSDK,
      test: true
    });
    testErrorResult = function(error, result) {
      (error === null).should.be["true"];
      return (result !== null).should.be["true"];
    };
    it('can authorize with callback', function(done) {
      this.timeout(2000);
      nock('https://accounts.moj.io').get("oauth2/authorize").query({
        app_id: "1234",
        redirect_uri: "http://localhost"
      }).reply(function(uri, requestBody, cb) {
        return cb(null, [
          200, {
            id: 1
          }
        ]);
      });
      return sdk.authorize({
        type: "implicit",
        app_id: "1234",
        redirect_uri: "http://localhost"
      }).callback(function(error, result) {
        testErrorResult(error, result);
        return done();
      });
    });
    it('can authorize with promise', function(done) {
      var promise;
      this.timeout(2000);
      nock('https://accounts.moj.io').get("oauth2/authorize").reply(function(uri, requestBody, cb) {
        return cb(null, [
          200, {
            id: 1
          }
        ]);
      });
      promise = sdk.authorize({
        type: "implicit",
        app_id: "1234",
        redirect_uri: "http://localhost"
      }).submit();
      return promise.then(function(result) {
        testErrorResult(null, result);
        return done();
      })["catch"](function(error) {
        console.log('Handle rejected promise (' + error + ') here.');
        (error === null).should.be["true"];
        return done();
      });
    });
    it('can authorize with stream', function(done) {
      var observer;
      this.timeout(2000);
      nock('https://accounts.moj.io').get("oauth2/authorize").reply(function(uri, requestBody, cb) {
        return cb(null, [
          200, {
            id: 1
          }
        ]);
      });
      return observer = sdk.authorize({
        type: "implicit",
        app_id: "1234",
        redirect_uri: "http://localhost"
      }).stream();
    });
    return it('can authorize with sync', function(done) {
      var result;
      this.timeout(2000);
      nock('https://accounts.moj.io').get("oauth2/authorize").reply(function(uri, requestBody, cb) {
        return cb(null, [
          200, {
            id: 1
          }
        ]);
      });
      return result = sdk.authorize({
        type: "implicit",
        app_id: "1234",
        redirect_uri: "http://localhost"
      }).sync();
    });
  });

}).call(this);

//# sourceMappingURL=NodeAuthSDK_implicit_test.js.map
