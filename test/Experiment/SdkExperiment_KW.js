// Generated by CoffeeScript 1.10.0
(function() {
  var MojioAuthSDK, MojioPromiseStyle, MojioSDK, async, client_id, client_secret, init, printErrorOrResult, redirect_uri, sdk, userName, userPassword;

  MojioSDK = require("./../../src/nodejs/sdk/MojioSDK");

  MojioPromiseStyle = require("./../../src/nodejs/styles/MojioPromiseStyle");

  MojioAuthSDK = require('../../src/nodejs/sdk/MojioAuthSDK');

  client_id = "36c80c0f-3c9d-45ac-9dab-31ea43bcc33a";

  client_secret = "20ffc722-e074-4f88-b6eb-af15e72c56b3";

  userPassword = '2R2nH@&K';

  userName = 'kennethtestacct';

  redirect_uri = "http://www.dummyurl.com/";

  async = require('async');

  init = {
    apiURL: 'api.moj.io',
    client_id: client_id,
    client_secret: client_secret,
    style: MojioPromiseStyle,
    environment: "staging"
  };

  sdk = new MojioSDK(init);

  printErrorOrResult = function() {
    if (typeof error !== "undefined" && error !== null) {
      console.log("error: " + error);
    }
    if (typeof result !== "undefined" && result !== null) {
      return console.log("result: " + JSON.stringify(result));
    }
  };

  async.series([
    function(cb) {
      return sdk.token(redirect_uri).credentials(userName, userPassword).scope(['full']).callback(function(error, result) {
        var token;
        if (error) {
          console.log('Access Token Error', JSON.stringify(error.content) + "  message:" + error.statusMessage + "  url:" + sdk.url());
        } else {
          token = result;
          console.log("Token:" + JSON.stringify(token));
        }
        return cb(error, result);
      });
    }, function(cb) {
      var mojios;
      mojios = sdk.get().mojios();
      return sdk.callback(function(error, result) {
        var token;
        if (error) {
          console.log('Access Token Error', JSON.stringify(error.content) + "  message:" + error.statusMessage + "  url:" + sdk.url());
        } else {
          token = result;
          console.log("Token:" + JSON.stringify(token));
        }
        return cb(error, result);
      });
    }, function(cb) {
      var vehicles;
      return vehicles = sdk.get().vehicles().callback(function(error, result) {
        var token;
        if (error) {
          console.log('Access Token Error', JSON.stringify(error.content) + "  message:" + error.statusMessage + "  url:" + sdk.url());
        } else {
          token = result;
          console.log("Token:" + JSON.stringify(token));
        }
        return cb(error, result);
      });
    }
  ], function(error, result) {
    return printErrorOrResult(error, result);
  });

}).call(this);

//# sourceMappingURL=SdkExperiment_KW.js.map
