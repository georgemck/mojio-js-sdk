// Generated by CoffeeScript 1.10.0
(function() {
  var HttpBrowserWrapper, async, nock, should, sinon;

  should = require('should');

  async = require('async');

  HttpBrowserWrapper = require('../../template/wrappers-browser/HttpWrapper');

  nock = require('nock');

  sinon = require('sinon');

  describe('Http Browser Wrapper', function() {
    var contentType, requests, testErrorResult, token, xhr;
    token = "token";
    contentType = "application/json";
    testErrorResult = function(error, result) {
      (error === null).should.be["true"];
      return (result !== null).should.be["true"];
    };
    xhr = null;
    requests = null;
    before(function() {
      xhr = sinon.useFakeXMLHttpRequest();
      requests = [];
      return xhr.onCreate = function(req) {
        return requests.push(req);
      };
    });
    after(function() {
      return xhr.restore();
    });
    it('tests @request get resource with id', function(done) {
      var httpBrowserWrapper;
      nock('https://api.moj.io').get('/v1/Vehicles/1').reply(function(uri, requestBody, cb) {
        this.req.headers.mojioapitoken.should.be.equal(token);
        this.req.headers['content-type'].should.be.equal(contentType);
        return cb(null, [
          200, {
            id: 1
          }
        ]);
      });
      httpBrowserWrapper = new HttpBrowserWrapper("token");
      return httpBrowserWrapper.request({
        method: 'Get',
        resource: "Vehicles",
        id: "1"
      }, (function(_this) {
        return function(error, result) {
          testErrorResult(error, result);
          return done();
        };
      })(this));
    });
    return it('tests @request get resource with id and form url encoding', function(done) {
      var httpBrowserWrapper;
      nock('https://api.moj.io').get('/v1/Vehicles/1').reply(function(uri, requestBody, cb) {
        this.req.headers.mojioapitoken.should.be.equal(token);
        this.req.headers['content-type'].should.be.equal(contentType);
        this.req.headers['host'].should.be.equal("api.moj.io");
        return cb(null, [
          200, {
            id: 1
          }
        ]);
      });
      httpBrowserWrapper = new HttpBrowserWrapper("token", 'https://api.moj.io/v1', true);
      return httpBrowserWrapper.request({
        method: 'Get',
        resource: "Vehicles",
        id: "1"
      }, (function(_this) {
        return function(error, result) {
          testErrorResult(error, result);
          return done();
        };
      })(this));
    });
  });

}).call(this);

//# sourceMappingURL=HttpBrowserWrapper_test.js.map
